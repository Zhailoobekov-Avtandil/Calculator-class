{"version":3,"sources":["components/Calculator/index.jsx","App.js","index.js"],"names":["Calculator","onNumber1","e","setState","num1","parseInt","target","value","onNumber2","num2","onPlus","result","state","onMinus","onMult","onDivide","type","this","onChange","onClick","React","Component","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAEaA,EAAb,kDACI,aAAe,IAAD,8BACV,gBAQJC,UAAY,SAACC,GACX,EAAKC,UAAS,iBAAO,CAACC,KAAMC,SAASH,EAAEI,OAAOC,YAVlC,EAadC,UAAY,SAACN,GACT,EAAKC,UAAS,iBAAO,CAACM,KAAMJ,SAASH,EAAEI,OAAOC,YAdpC,EAiBdG,OAAS,WACL,EAAKP,UAAS,iBAAO,CAACQ,OAAQ,EAAKC,MAAMR,KAAO,EAAKQ,MAAMH,UAlBjD,EAqBdI,QAAU,WACN,EAAKV,UAAS,iBAAO,CAACQ,OAAQ,EAAKC,MAAMR,KAAO,EAAKQ,MAAMH,UAtBjD,EAyBdK,OAAS,WACL,EAAKX,UAAS,iBAAO,CAACQ,OAAQ,EAAKC,MAAMR,KAAO,EAAKQ,MAAMH,UA1BjD,EA6BdM,SAAW,WACP,EAAKZ,UAAS,iBAAO,CAACQ,OAAQ,EAAKC,MAAMR,KAAO,EAAKQ,MAAMH,UA5B3D,EAAKG,MAAQ,CACTR,KAAM,EACNK,KAAM,EACNE,OAAQ,GALF,EADlB,0CAkCI,WACI,OAAO,gCACH,uBAAOK,KAAK,SAAST,MAAOU,KAAKL,MAAMR,KAAMc,SAAUD,KAAKhB,YAC5D,wBAAQkB,QAASF,KAAKP,OAAtB,eACA,wBAAQS,QAASF,KAAKJ,QAAtB,eACA,wBAAQM,QAASF,KAAKH,OAAtB,eACA,wBAAQK,QAASF,KAAKF,SAAtB,eACA,uBAAOC,KAAK,SAAST,MAAOU,KAAKL,MAAMH,KAAMS,SAAUD,KAAKT,YAC5D,+BAAOS,KAAKL,MAAMD,gBA1C9B,GAAgCS,IAAMC,WCAzBC,EAAM,WACjB,OAAO,qBAAKC,UAAU,MAAf,SACN,cAAC,EAAD,OCAHC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.67f7c103.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport class Calculator extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            num1: 1,\r\n            num2: 0,\r\n            result: 0\r\n        }\r\n    }\r\n\r\n    onNumber1 = (e) => {\r\n      this.setState(() => ({num1: parseInt(e.target.value)}))\r\n    }\r\n\r\n    onNumber2 = (e) => {\r\n        this.setState(() => ({num2: parseInt(e.target.value)}))\r\n    }\r\n\r\n    onPlus = () => {\r\n        this.setState(() => ({result: this.state.num1 + this.state.num2}))\r\n    }\r\n\r\n    onMinus = () => {\r\n        this.setState(() => ({result: this.state.num1 - this.state.num2}))\r\n    }\r\n\r\n    onMult = () => {\r\n        this.setState(() => ({result: this.state.num1 * this.state.num2}))\r\n    }\r\n\r\n    onDivide = () => {\r\n        this.setState(() => ({result: this.state.num1 / this.state.num2}))\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <input type='number' value={this.state.num1} onChange={this.onNumber1}/>\r\n            <button onClick={this.onPlus}>+</button>\r\n            <button onClick={this.onMinus}>-</button>\r\n            <button onClick={this.onMult}>*</button>\r\n            <button onClick={this.onDivide}>/</button>\r\n            <input type=\"number\" value={this.state.num2} onChange={this.onNumber2}/>\r\n            <span>{this.state.result}</span>\r\n        </div>\r\n    }\r\n\r\n}","import { Calculator } from \"./components/Calculator\"\n\nexport const App = () => {\n  return <div className='App'>\n   <Calculator />\n  </div>\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}